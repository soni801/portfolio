@use "../../variables";

// Specify the spacing between sections on the home page
$section-spacing-mobile: 100px;
$section-spacing-desktop: 150px;

:host
{
  // Use a normal css variable for section spacing to more easily change it on larger screens
  --section-spacing: #{$section-spacing-mobile};

  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--section-spacing);

  margin-top: calc(2 * var(--section-spacing));
}

// Offset section headings to align properly with content on second column
h1:first-child
{
  margin-top: -16px;
}

#introduction
{
  display: grid;
  grid-row-gap: 30px;

  // Double the spacing directly below the introduction
  padding-bottom: var(--section-spacing);

  img
  {
    // Span 2 rows
    grid-row: 1 / 3;

    border-radius: 30px;
    box-shadow: variables.$accent 0 0 120px;
  }

  p
  {
    margin: 0;
    max-width: 32ch;
  }

  #interests
  {
    place-self: end start;
  }
}

#about-me
{
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 30px;

  // Don't go all the way to screen edges on mobile
  padding: 0 20px;

  // Each individual summary info tack
  .info-tack
  {
    display: flex;
    align-items: center;
    gap: 1em;

    // Reset text margin while also applying custom margin
    * { margin: .2em 0; }

    // Add some margin to devicon icons
    i
    {
      margin: 0 2px;
      font-size: 20px;
    }
  }

  // Add some spacing around current work
  #current-work h2
  {
    margin: 2rem 0 .5rem;
  }

  #detailed-text
  {
    // Padding and rounding size
    $padding: 2ch;

    // Place in right column
    position: relative;
    grid-row: 1 / 4;
    grid-column: 2 / 3;

    // Match height to left column
    // This is using a really cool trick from here: https://stackoverflow.com/a/68236289
    height: 0;
    min-height: calc(100% - 2 * $padding);

    // Styling
    padding: $padding;
    background: variables.$background;
    box-shadow: rgba(variables.$accent, .2) 0 0 50px;
    border-radius: $padding;
    overflow: hidden;
    user-select: none;

    // Remove top margin from first child
    :first-child { margin-top: 0; }

    // Make inner content pass-through (this will help get the correct target when clicking)
    * { pointer-events: none; }

    // Fade on bottom
    &::after
    {
      // Placement
      content: 'Trykk for å forstørre';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;

      // Fadeout on bottom of container
      padding: 4em 0 .5em;
      background: linear-gradient(to bottom, transparent, variables.$background 75%);

      // Text styling
      color: variables.$muted-accent;
      text-shadow: variables.$accent 0 0 15px;
      font-size: 1.1em;
      font-weight: bold;
      text-align: center;

      transition: .5s ease;
    }

    &:hover
    {
      cursor: pointer;

      &::after
      {
        padding-top: 8em;
        font-size: 1.3em;
      }
    }
  }

  // Hide fullscreen close button by default
  button { display: none; }
}

// Knowledge 'cards' spacing
$knowledge-spacing: 20px;

#knowledge
{
  width: 1000px;
  max-width: 100vw; // Never be larger than the viewport

  mask: linear-gradient(to left, transparent, white 25%, white 75%, transparent);
  overflow: hidden;

  div
  {
    display: flex;
    gap: $knowledge-spacing;

    width: max-content; // Reset size for animation
    margin: $knowledge-spacing 0; // Vertical spacing between lines

    &[data-animated="true"]
    {
      animation: scroll 60s linear infinite;
    }
  }
}

#backdrop-pattern
{
  // Configure height
  $pattern-height: 1000px;

  // Sizing
  width: 100%;
  height: $pattern-height;

  // Placement
  margin-top: -$pattern-height;
  margin-bottom: calc(-1 * var(--section-spacing));

  // Create pattern
  background: variables.$accent;
  mask-image: url("/assets/pattern.png"), linear-gradient(to top, transparent, black);
  mask-composite: subtract;
  mask-position: bottom;
  mask-size: 30vw;
  z-index: -1;
}

// Styling for fullscreen about me text
#about-me-fullscreen
{
  // Position
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  // Sizing
  width: max-content;
  padding: 30px;
  border-radius: 30px;

  // Background
  background: variables.$background;
  box-shadow: variables.$accent 0 0 100px,
              rgba(variables.$dark, .8) 0 0 0 50vw;

  // Columns
  column-count: 2;
  column-gap: 40px;

  // Remove top margin from first child
  :first-child { margin-top: 0; }
}

// Show button when fullscreen text is visible
button.visible
{
  // This is most likely the best way of displaying this as for now
  display: unset !important;

  // Position
  position: fixed;
  bottom: 1rem;
  left: 50%;
  z-index: 1;
  transform: translateX(-50%);

  // Size
  width: 100vw;
  max-width: 50ch;

  // Styling
  color: variables.$foreground;
  background: variables.$muted-accent;
  border: none;
  border-radius: 3rem;
  cursor: pointer;

  // Text style
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 3rem;
  text-transform: uppercase;
}

// Desktop-only styling
@media (min-width: 900px)
{
  // Increase section spacing on larger screens
  :host
  {
    --section-spacing: #{$section-spacing-desktop};
  }

  #introduction
  {
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 30px;
  }

  #projects
  {
    column-count: 2;
    column-gap: 40px;
  }
}

// Animation related styling
[data-direction="right"]
{
  // I know using !important is generally a bad thing, but I think it is the cleanest solution here.
  animation-direction: reverse !important;
}

// Sideways scroll animation
@keyframes scroll
{
  to
  {
    transform: translate(calc(-50% - $knowledge-spacing / 2));
  }
}
